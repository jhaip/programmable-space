#!/bin/bash

parent_path=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )
cd "$parent_path"

function cmd() {
  if [ "$1" == "start" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/0__boot.js &
    echo -e "booting"
  elif [ "$1" == "cvstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    python3 src/programs/50__proxy.py &
    python3 src/programs/1600__frame-to-dots.py &
    cd src/programs
    go run 1800__dots-to-papers.go &
    cd ../..
    echo -e "booting"
  elif [ "$1" == "laserstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    v4l2-ctl \
      --set-ctrl=brightness=1 \
      --set-ctrl=contrast=128 \
      --set-ctrl=saturation=0 \
      --set-ctrl=gain=0 \
      --set-ctrl=white_balance_temperature_auto=0 \
      --set-ctrl=white_balance_temperature=3000 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=backlight_compensation=0 \
      --set-ctrl=exposure_auto=1 \
      --set-ctrl=exposure_absolute=150 \
      --set-ctrl=focus_auto=0
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
    python3 src/programs/54__laserProxy.py &
    python3 src/programs/1620__seeLaser.py &
    sudo python3 src/programs/649__keyboard.py &
    echo -e "booting"
  elif [ "$1" == "lampstart" ]
  then
    v4l2-ctl \
      --set-ctrl=brightness=10 \
      --set-ctrl=contrast=0 \
      --set-ctrl=saturation=-100 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=exposure_time_absolute=100
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1280,height=720,pixelformat=MPEG
    export DISPLAY=:0
    python3 src/programs/1621__seeLaserLamp.py &
    sudo python3 src/programs/650__keyboard.py &
    chromium-browser --kiosk --enable-webgl --ignore-gpu-blacklist --app=http://progspaceweb2.ngrok.io
    echo -e "booting"
  elif [ "$1" == "lampstart2" ]
  then
    pkill -f "lua-graphics.love" ##############################
    v4l2-ctl \
      --set-ctrl=brightness=10 \
      --set-ctrl=contrast=0 \
      --set-ctrl=saturation=-100 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=exposure_time_absolute=100
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1280,height=720,pixelformat=MPEG
    export DISPLAY=:0
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    python3 src/programs/1621__seeLaserLamp.py 1997 &
    cd src
    # lua calendar-calibration.lua &
    rm lua-graphics.love
    zip lua-graphics.love \
        programs/graphics.lua \
        helpers/helper.lua helpers/matrix.lua helpers/json.lua helpers/zhelpers.lua \
        files/Inconsolata-Regular.ttf
    love ./lua-graphics.love 1997
    cd ..
    echo -e "booting"
  elif [ "$1" == "lightcrafter" ]
  then
    pkill -f "lua-graphics.love"
    v4l2-ctl \
      --set-ctrl=brightness=10 \
      --set-ctrl=contrast=0 \
      --set-ctrl=saturation=-100 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=exposure_absolute=50
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=160,height=120,pixelformat=MPEG
    export DISPLAY=:0
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    # Start toggleLightcrafter via a separate service
    # sudo python3 src/programs/1650__toggleLightcrafter.py &
    python3 src/programs/1622__seeLaserLamp2.py 1998 &
    cd src
    rm lua-graphics.love
    rm lua-bundle
    mkdir -p lua-bundle
    cp programs/graphics.lua lua-bundle/main.lua
    cp helpers/helper.lua lua-bundle/helper.lua
    cp helpers/matrix.lua lua-bundle/matrix.lua
    cp helpers/json.lua lua-bundle/json.lua
    cp helpers/zhelpers.lua lua-bundle/zhelpers.lua
    cp files/Inconsolata-Regular.ttf lua-bundle/Inconsolata-Regular.ttf
    cd lua-bundle
    zip lua-graphics.love main.lua helper.lua matrix.lua json.lua zhelpers.lua Inconsolata-Regular.ttf
    cd ..
    love ./lua-bundle/lua-graphics.love 1998
    cd ..
    echo -e "booting"
  elif [ "$1" == "anybeampicam" ]
  then
    pkill -f "1601__frame-to-papers.go"
    pkill -f "exe/1601__frame-to-papers"
    pkill -f "lua-graphics.love"
    export DISPLAY=:0
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    export HEADLESS_CV=true
    cd src/programs
    go run 1601__frame-to-papers.go 0 &
    cd ../..
    cd src
    rm lua-graphics.love
    rm lua-bundle
    mkdir -p lua-bundle
    cp programs/graphics.lua lua-bundle/main.lua
    cp helpers/helper.lua lua-bundle/helper.lua
    cp helpers/matrix.lua lua-bundle/matrix.lua
    cp helpers/json.lua lua-bundle/json.lua
    cp helpers/zhelpers.lua lua-bundle/zhelpers.lua
    cp files/Inconsolata-Regular.ttf lua-bundle/Inconsolata-Regular.ttf
    cd lua-bundle
    zip lua-graphics.love main.lua helper.lua matrix.lua json.lua zhelpers.lua Inconsolata-Regular.ttf
    cd ..
    love ./lua-bundle/lua-graphics.love 1993 &
    cd ..
    echo -e "booting"
  elif [ "$1" == "deccam2020" ]
  then
    pkill -f "1601__frame-to-papers.go"
    pkill -f "exe/1601__frame-to-papers"
    pkill -f "lua-graphics.love"
    export DISPLAY=:1
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    export HEADLESS_CV=true
    export CV_PROGRAM_ID="1599"
    export CV_CAMERA_ID="1994"
    cd src/programs
    go run 1601__frame-to-papers.go 0 &
    cd ../..
    cd src
    rm lua-graphics.love
    rm lua-bundle
    mkdir -p lua-bundle
    cp programs/graphics.lua lua-bundle/main.lua
    cp helpers/helper.lua lua-bundle/helper.lua
    cp helpers/matrix.lua lua-bundle/matrix.lua
    cp helpers/json.lua lua-bundle/json.lua
    cp helpers/zhelpers.lua lua-bundle/zhelpers.lua
    cp files/Inconsolata-Regular.ttf lua-bundle/Inconsolata-Regular.ttf
    cd lua-bundle
    zip lua-graphics.love main.lua helper.lua matrix.lua json.lua zhelpers.lua Inconsolata-Regular.ttf
    cd ..
    love ./lua-bundle/lua-graphics.love 1994 &
    cd ..
    echo -e "booting"
  elif [ "$1" == "decdualcam2020" ]
  then
    pkill -f "1601__frame-to-papers.go"
    pkill -f "exe/1601__frame-to-papers"
    pkill -f "lua-graphics.love"
    pkill -f "ffmpeg"
    sudo modprobe v4l2loopback devices=2 exclusive_caps=1,1 video_nr=5,6 card_label="Webcam Copy 1","Webcam Copy 2"
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
    sudo ffmpeg -f video4linux2 -i /dev/video0 -codec copy -f v4l2 /dev/video5 -codec copy -f v4l2 /dev/video6 &
    sleep 1
    export DISPLAY=:1
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    export HEADLESS_CV=true
    export CV_PROGRAM_ID="1599"
    export CV_CAMERA_ID="1994"
    cd src/programs
    go run 1601__frame-to-papers.go 5 &
    python3 1631__arucoTagCv.py &
    cd ../..
    cd src
    rm lua-graphics.love
    rm lua-bundle
    mkdir -p lua-bundle
    cp programs/graphics.lua lua-bundle/main.lua
    cp helpers/helper.lua lua-bundle/helper.lua
    cp helpers/matrix.lua lua-bundle/matrix.lua
    cp helpers/json.lua lua-bundle/json.lua
    cp helpers/zhelpers.lua lua-bundle/zhelpers.lua
    cp files/Inconsolata-Regular.ttf lua-bundle/Inconsolata-Regular.ttf
    cd lua-bundle
    zip lua-graphics.love main.lua helper.lua matrix.lua json.lua zhelpers.lua Inconsolata-Regular.ttf
    cd ..
    love ./lua-bundle/lua-graphics.love 1994 &
    cd ..
    echo -e "booting"
  elif [ "$1" == "pieditorstart" ]
  then
    pkill -f "lua-graphics.love"
    export DISPLAY=:0
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    sudo python3 src/programs/650__keyboard.py &
    cd src
    rm lua-graphics.love
    rm lua-bundle
    mkdir -p lua-bundle
    cp programs/graphics.lua lua-bundle/main.lua
    cp helpers/helper.lua lua-bundle/helper.lua
    cp helpers/matrix.lua lua-bundle/matrix.lua
    cp helpers/json.lua lua-bundle/json.lua
    cp helpers/zhelpers.lua lua-bundle/zhelpers.lua
    cp files/Inconsolata-Regular.ttf lua-bundle/Inconsolata-Regular.ttf
    cd lua-bundle
    zip lua-graphics.love main.lua helper.lua matrix.lua json.lua zhelpers.lua Inconsolata-Regular.ttf
    cd ..
    love ./lua-bundle/lua-graphics.love 1999
    cd ..
    echo -e "booting"
  elif [ "$1" == "lasersocksstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    v4l2-ctl \
      --set-ctrl=brightness=1 \
      --set-ctrl=contrast=128 \
      --set-ctrl=saturation=0 \
      --set-ctrl=gain=0 \
      --set-ctrl=white_balance_temperature_auto=0 \
      --set-ctrl=white_balance_temperature=3000 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=backlight_compensation=0 \
      --set-ctrl=exposure_auto=1 \
      --set-ctrl=exposure_absolute=150 \
      --set-ctrl=focus_auto=0
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
    node src/programs/0__boot.js &
    python3 src/programs/280__makeLaserRegion.py &
    python3 src/programs/281__laserInRegion.py &
    node src/programs/909__laserSocksReferee.js &
    python3 src/programs/910__laserSocksScoreboard.py &
    python3 src/programs/1620__seeLaser.py &
    sudo python3 src/programs/649__keyboard.py &
    echo -e "booting"
  elif [ "$1" == "tilestart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    v4l2-ctl \
      --set-ctrl=brightness=50 \
      --set-ctrl=contrast=150 \
      --set-ctrl=saturation=128 \
      --set-ctrl=white_balance_temperature_auto=0 \
      --set-ctrl=gain=0 \
      --set-ctrl=power_line_frequency=2 \
      --set-ctrl=white_balance_temperature=3000 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=backlight_compensation=0 \
      --set-ctrl=exposure_auto=3 \
      --set-ctrl=exposure_auto_priority=0 \
      --set-ctrl=focus_auto=1
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
    sleep 2
    python3 src/programs/53__tileProxy.py &
    python3 src/programs/1610__seeCodeBlocks.py &
    echo -e "booting"
  elif [ "$1" == "keyboardstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    python3 src/programs/51__proxy.py &
    sudo python3 src/programs/649__keyboard.py &
    echo -e "booting"
  elif [ "$1" == "robotstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/577__programEditor.js &
    node src/programs/1900__processManager.js &
    node src/programs/105__robotCodeRunner.js &
    node src/programs/10__debugViewer.js &
    echo -e "booting"
  elif [ "$1" == "camerastart" ]
  then
    v4l2-ctl \
      --set-ctrl=brightness=50 \
      --set-ctrl=contrast=0 \
      --set-ctrl=saturation=0 \
      --set-ctrl=sharpness=0 \
      --set-ctrl=exposure_time_absolute=1000
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1280,height=720,pixelformat=MPEG
    export PROG_SPACE_SERVER_URL="192.168.1.34"
    python3 src/programs/1630__claimFrame.py &
    echo -e "booting"
  elif [ "$1" == "camerastart2" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    python3 src/programs/55__frameProxy.py &
    python3 src/programs/1630__claimFrame.py &
    echo -e "booting"
  elif [ "$1" == "calendarstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/20__httpClient.js &
    node src/programs/12__regionDebug.js &
    node src/programs/1246__webDisplay.js &
    echo -e "booting"
    sleep 5
    chromium-browser --start-fullscreen http://localhost:3012
  elif [ "$1" == "editorstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/1900__processManager.js &
    node src/programs/10__debugViewer.js &
    node src/programs/20__httpClient.js &
    # node src/programs/40__parser.js &
    python3 src/programs/498__printingManager.py &
    # node src/programs/577__programEditor.js &
    sleep 3
    node src/programs/1013__textEditor.js &
    node src/programs/1804__editPaperSeen.js &
    python3 src/programs/57__editorToServerProxy.py &
    python3 src/programs/1700__projectorDisplay.py &
    sudo python3 src/programs/649__keyboard.py &
    cd src/programs
    go run 1382__print-paper.go &
    go run 1800__dots-to-papers.go &
    cd ../..
    echo -e "booting"
  elif [ "$1" == "rfideditorstart" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/1900__processManager.js &
    node src/programs/10__debugViewer.js &
    node src/programs/20__httpClient.js &
    sleep 3
    node src/programs/1013__textEditor.js &
    node src/programs/1804__editPaperSeen.js &
    node src/programs/980__thermalPrintCode.js &
    python3 src/programs/57__editorToServerProxy.py &
    python3 src/programs/1700__projectorDisplay.py &
    sudo python3 src/programs/791__thermalPrinterLinux.py &
    sudo python3 src/programs/1192__circuitPythonProxy.py &
    sudo python3 src/programs/649__keyboard.py &
    echo -e "booting"
  elif [ "$1" == "rfideditorstart2" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/111__rfidEditorBoot.js &
    sleep 2
    sudo python3 src/programs/791__thermalPrinterLinux.py &
    sudo python3 src/programs/1192__circuitPythonProxy.py &
    sudo python3 src/programs/649__keyboard.py &
    sudo /home/jacob/.nvm/versions/node/v10.6.0/bin/node src/programs/1850__bleProxyRfid.js &
    # sudo /home/jacob/.nvm/versions/node/v10.6.0/bin/node src/programs/1193__bluefruitProxy.js &
    python3 src/programs/1700__projectorDisplay.py &
    # ngrok http -subdomain=progspacemasterlist 3013 > /dev/null &
    ngrok start masterlist web2 -config=./util/ngrok/rfideditorstart2.conf > /dev/null
    echo -e "booting"
  elif [ "$1" == "rfideditorstart3" ]
  then
    cd broker
    /usr/local/go/bin/go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    echo -e "done sleeping"
    /home/jacob/.nvm/versions/node/v10.6.0/bin/node src/programs/111__rfidEditorBoot.js &
    echo -e "done running 1"
    sleep 2
    echo -e "done sleeping 2"
    # /home/jacob/.nvm/versions/node/v10.6.0/bin/node src/programs/1850__bleProxyRfid.js &
    sudo systemctl start ble-rfid
    echo -e "done running 2"
    cd src/programs
    /usr/local/go/bin/go run 1382__print-paper.go &
    /usr/local/go/bin/go run 1606__frame-to-papers-boot.go &
    cd ../..
    # sudo /home/jacob/.nvm/versions/node/v10.6.0/bin/node src/programs/1193__bluefruitProxy.js &
    # ngrok http -subdomain=progspacemasterlist 3013 > /dev/null &
    /usr/local/bin/ngrok start masterlist web2 -config=./util/ngrok/rfideditorstart2.conf & > /dev/null
    echo -e "booting"
  elif [ "$1" == "test" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    node src/programs/1200__test.js &
    node src/programs/1201__test.js &
    for value in {1202..1210}
    do
      node src/programs/${value}__test.js &
    done
    echo -e "booting"
  elif [ "$1" == "testcp" ]
  then
    for value in {1211..1299}
    do
      cp src/programs/1202__test.js src/programs/${value}__test.js
    done
    echo -e "booting"
  elif [ "$1" == "pytest" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    python3 src/programs/1300__test.py &
    for value in {1301..1310}
    do
      python3 src/programs/1301__test.py $value &
    done
    echo -e "booting"
  elif [ "$1" == "gotest" ]
  then
    cd broker
    go run broker.go parser2.go subscriber.go database.go &
    echo -e "running broker"
    cd ..
    sleep 2
    cd src/programs
    go build 1400__exp.go
    for value in {1400..1499}
    do
      ./1400__exp $value &
    done
    echo -e "booting"
  elif [ "$1" == "stoptest" ]
  then
    pkill -f "go run broker.go parser2.go subscriber.go database.go"
    pkill -f "/exe/broker"
    pkill -f src/programs/12*__test.js
    pkill -f src/programs/13*__test.py
    pkill -f "1400__exp"
    pkill -f "node src/programs"
    pkill -f "python3 src/programs"
    pkill -f "go run src/programs"
    pkill -f "/tmp/go-build"
  elif [ "$1" == "stop" ]
  then
    pkill -f "go run broker.go parser2.go subscriber.go database.go"
    pkill -f "/exe/broker"
    pkill -f "src/programs/0__boot.js"
    pkill -f "node src/programs"
    pkill -f "python3 src/programs"
    pkill -f "go run src/programs"
    pkill -f "/tmp/go-build"
  elif [ "$1" == "webcam" ]
  then
    v4l2-ctl \
      --set-ctrl=brightness=128 \
      --set-ctrl=contrast=128 \
      --set-ctrl=saturation=128 \
      --set-ctrl=white_balance_temperature_auto=0 \
      --set-ctrl=gain=0 \
      --set-ctrl=power_line_frequency=2 \
      --set-ctrl=white_balance_temperature=3000 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=backlight_compensation=0 \
      --set-ctrl=exposure_auto=3 \
      --set-ctrl=exposure_auto_priority=0 \
      --set-ctrl=focus_auto=1
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
  elif [ "$1" == "log" ]
  then
    tail -f broker/broker.log
  elif [ "$1" == "stopdisplays" ]
  then
    pkill --signal 9 -f src/programs/648__keyboard.py
    pkill --signal 9 -f src/programs/1700__projectorDisplay.py
    pkill --signal 9 -f src/programs/1701__projectorDisplay.py
  elif [ "$1" == "displays" ]
  then
    export DISPLAY=:0
    pkill --signal 9 -f src/programs/648__keyboard.py
    pkill --signal 9 -f src/programs/1700__projectorDisplay.py
    pkill --signal 9 -f src/programs/1701__projectorDisplay.py
    sleep 5
    python3 src/programs/648__keyboard.py &
    python3 src/programs/1700__projectorDisplay.py &
    # python3 src/programs/1701__projectorDisplay.py &
    sleep 5
    keyboard_pid=$(pgrep -f 648__keyboard.py)
    echo "keyboard pid $keyboard_pid"
    if [ -z "$keyboard_pid" ]
    then
      echo "no keyboard pid"
      exit
    fi
    keyboard_window_id=$(xdotool search --onlyvisible --pid $keyboard_pid)
    echo "keyboard window id $keyboard_window_id"
    if [ -z "$keyboard_window_id" ]
    then
      echo "no keyboard_window_id"
      exit
    fi
    xdotool windowmove $keyboard_window_id 0 0
    display_pid1=$(pgrep -f 1700__projectorDisplay.py)
    echo "display 1 pid $display_pid1"
    if [ -z "$display_pid1" ]
    then
      echo "no display_pid1"
      exit
    fi
    display_window_id1=$(xdotool search --onlyvisible --pid $display_pid1)
    if [ -z "$display_window_id1" ]
    then
      echo "no display_window_id1"
      exit
    fi
    echo "display 1 id $display_window_id1"
    xdotool windowmove $display_window_id1 0 0
    # display_pid2=$(pgrep -f 1701__projectorDisplay.py)
    # echo "display 2 pid $display_pid2"
    # if [ -z "$display_pid2" ]
    # then
    #  echo "no display_pid2"
    #  exit
    # fi
    # display_window_id2=$(xdotool search --onlyvisible --pid $display_pid2)
    # echo "display 2 id $display_window_id2"
    # if [ -z "$display_window_id2" ]
    # then
    #   echo "no display_window_id2"
    #   exit
    # fi
    # xdotool windowmove $display_window_id2 1921 0
    xdotool windowactivate $keyboard_window_id
  else
    echo -e "UNKNOWN COMMAND"
    exit 1
  fi
}

cmd $1 $2
